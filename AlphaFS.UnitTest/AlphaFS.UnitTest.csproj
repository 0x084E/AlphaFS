<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="11.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{BC336637-FDD7-4D13-9B24-1A888E85A944}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>AlphaFS.UnitTest</RootNamespace>
    <AssemblyName>AlphaFS.UnitTest</AssemblyName>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Net35 Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\bin\Debug\Net35\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NET35</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <Prefer32Bit>false</Prefer32Bit>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Net35|AnyCPU'">
    <OutputPath>..\bin\Release\Net35\</OutputPath>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE;NET35</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Net40 Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\bin\Debug\Net40\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NET40</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <Prefer32Bit>false</Prefer32Bit>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Net40|AnyCPU'">
    <OutputPath>..\bin\Release\Net40\</OutputPath>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE;NET40</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Net45 Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\bin\Debug\Net45\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NET45</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <Prefer32Bit>false</Prefer32Bit>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Net45|AnyCPU'">
    <OutputPath>..\bin\Release\Net45\</OutputPath>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE;NET45</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Net451 Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\bin\Debug\Net451\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NET451</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <Prefer32Bit>false</Prefer32Bit>
    <TargetFrameworkVersion>v4.5.1</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Net451|AnyCPU'">
    <OutputPath>..\bin\Release\Net451\</OutputPath>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE;NET451</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <TargetFrameworkVersion>v4.5.1</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Net452|AnyCPU'">
    <OutputPath>..\bin\Release\Net452\</OutputPath>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE;NET452</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Net452 Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\bin\Debug\Net452\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NET452</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <Prefer32Bit>false</Prefer32Bit>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <DelaySign>false</DelaySign>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>..\AlphaFS.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\AlphaFS\AssemblyVersionInfo.cs">
      <Link>AssemblyVersionInfo.cs</Link>
    </Compile>
    <Compile Include="AlphaFS Alternate Data Streams\AlphaFS_AlternateDataStreamsTest.cs" />
    <Compile Include="AlphaFS BackupFileStream Class\AlphaFS_BackupFileStreamTest.cs" />
    <Compile Include="AlphaFS ByHandleFileInfo Class\AlphaFS_ByHandleFileInfoTest.cs" />
    <Compile Include="AlphaFS Compression\AlphaFS CompressionTest.cs" />
    <Compile Include="AlphaFS Crc Class\AlphaFS_CrcTest.cs" />
    <Compile Include="AlphaFS Device Class\AlphaFS_DeviceTest.cs" />
    <Compile Include="AlphaFS FileSystemEntryInfo Class\AlphaFS_Directory.EnumerateFileSystemEntryInfos_ContinueOnAccessDeniedExceptionUsingDirectoryEnumerationErrorFilter.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.EnumerateSessions.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_HostTest.cs" />
    <Compile Include="AlphaFS PhysicalDisk Class\AlphaFS_Device.EnumeratePhysicalDisks.cs" />
    <Compile Include="AlphaFS PhysicalDisk Class\AlphaFS_Device.GetPhysicalDiskInfo_FromDevicePath.cs" />
    <Compile Include="AlphaFS PhysicalDisk Class\AlphaFS_Device.GetStorageAdapterInfo_FromLogicalDrive.cs" />
    <Compile Include="AlphaFS PhysicalDisk Class\AlphaFS_Device.GetStorageDeviceInfo_FromLogicalDrive.cs" />
    <Compile Include="AlphaFS PhysicalDisk Class\AlphaFS_Device.GetPhysicalDiskInfo_FromVolume.cs" />
    <Compile Include="AlphaFS PhysicalDisk Class\AlphaFS_Device.GetPhysicalDiskInfo_FromLogicalDrive.cs" />
    <Compile Include="AlphaFS PhysicalDisk Class\AlphaFS_Device.GetStoragePartitionInfo_FromLogicalDrive.cs" />
    <Compile Include="AlphaFS PhysicalDisk Class\AlphaFS_PhysicalDiskInfoTest.cs" />
    <Compile Include="AlphaFS Encryption\AlphaFS_EncryptionTest.cs" />
    <Compile Include="AlphaFS FileIdInfo Class\AlphaFS_Directory.GetFileIdInfo.cs" />
    <Compile Include="AlphaFS FileIdInfo Class\AlphaFS_File.GetFileIdInfo.cs" />
    <Compile Include="AlphaFS ByHandleFileInfo Class\AlphaFS_Directory.GetFileInfo.cs" />
    <Compile Include="AlphaFS Crc Class\AlphaFS_Crc64Iso_StaticDefaultSeedAndPolynomialWithShortAsciiString2.cs" />
    <Compile Include="AlphaFS Crc Class\AlphaFS_Crc64Iso_StaticDefaultSeedAndPolynomialWithShortAsciiString.cs" />
    <Compile Include="AlphaFS Crc Class\AlphaFS_Crc32_StaticDefaultSeedAndPolynomialWithShortAsciiString2.cs" />
    <Compile Include="AlphaFS Crc Class\AlphaFS_Crc32_StaticDefaultSeedAndPolynomialWithShortAsciiString.cs" />
    <Compile Include="AlphaFS ByHandleFileInfo Class\AlphaFS_File.GetFileInfoByHandle.cs" />
    <Compile Include="AlphaFS FileIdInfo Class\AlphaFS_FileIdInfoTest.cs" />
    <Compile Include="AlphaFS FileSystemEntryInfo Class\AlphaFS_Directory.GetFileSystemEntryInfo.cs" />
    <Compile Include="AlphaFS FileSystemEntryInfo Class\AlphaFS_FileSystemEntryInfoTest.cs" />
    <Compile Include="AlphaFS FileSystemEntryInfo Class\AlphaFS_File.GetFileSystemEntryInfo.cs" />
    <Compile Include="AlphaFS Device Class\AlphaFS_Device.EnumerateDevices.cs" />
    <Compile Include="AlphaFS BackupFileStream Class\AlphaFS_BackupFileStream_InitializeInstance.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.EnumerateNetworkConnections.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.EnumerateNetworks.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS.Host_GetWorkstationStatistics.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS.Host_GetServerStatistics.cs" />
    <Compile Include="AlphaFS Timestamps\AlphaFS_TimestampsTest.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.GetUniqueVolumeNameForPath.cs" />
    <Compile Include="AlphaFS Junctions, Links\AlphaFS_Directory.Copy_CopySymbolicLink.cs" />
    <Compile Include="AlphaFS Junctions, Links\AlphaFS_File.Copy_CopySymbolicLink.cs" />
    <Compile Include="AlphaFS ProcessContext Class\AlphaFS_ProcessContextTest.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.GetUniqueVolumeNameForPath.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.VolumeTest.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.GetDriveType.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.GetDriveNameForNtDeviceName.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.GetXxx.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.QueryDosDevice.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.EnumerateVolumeMountPoints.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.SetVolumeLabel.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.IsSameVolume.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.GetVolumeLabel.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.DefineDosDevice.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.GetDriveFormat.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.EnumerateVolumes.cs" />
    <Compile Include="Directory Class\AlphaFS_Directory.Copy\AlphaFS_Directory.Copy_CatchAlreadyExistsException_DestinationFileAlreadyExists.cs" />
    <Compile Include="Directory Class\AlphaFS_Directory.Copy\AlphaFS_Directory.Copy_CatchDeviceNotReadyException_NonExistingDestinationLogicalDrive.cs" />
    <Compile Include="Directory Class\AlphaFS_Directory.Copy\AlphaFS_Directory.Copy_CatchUnauthorizedAccessException_UserExplicitDenyOnDestinationFolder.cs" />
    <Compile Include="Directory Class\AlphaFS_Directory.Copy\AlphaFS_Directory.Copy_Overwrite_DestinationFileAlreadyExists.cs" />
    <Compile Include="Directory Class\AlphaFS_Directory.Copy\AlphaFS_Directory.Copy.cs" />
    <Compile Include="Directory Class\AlphaFS_Directory.Copy\AlphaFS_Directory.Copy_CatchDirectoryNotFoundException_NonExistingSourceDirectory.cs" />
    <Compile Include="Directory Class\AlphaFS_Directory.Copy\AlphaFS_Directory.Copy_CatchDeviceNotReadyException_NonExistingSourceLogicalDrive.cs" />
    <Compile Include="Directory Class\AlphaFS_Directory.Copy\AlphaFS_Directory.CopyTest.cs" />
    <Compile Include="Directory Class\Directory.CreateDirectory\Directory.CreateDirectoryTest.cs" />
    <Compile Include="Directory Class\Directory.Delete\AlphaFS_Directory.DeleteTest.cs" />
    <Compile Include="Directory Class\Directory.Delete\AlphaFS_Directory.Delete_CatchUnauthorizedAccessException_DirectoryHasDenyPermission.cs" />
    <Compile Include="Directory Class\Directory.Delete\AlphaFS_Directory.Delete_CatchDirectoryReadOnlyException_DirectoryIsReadOnly.cs" />
    <Compile Include="Directory Class\Directory.Delete\AlphaFS_Directory.Delete_CatchDeviceNotReadyException_NonExistingLogicalDrive.cs" />
    <Compile Include="Directory Class\Directory.Delete\Directory.Delete.CatchDirectoryNotFoundException_FileExistsWithSameNameAsDirectory.cs" />
    <Compile Include="Directory Class\Directory.Delete\Directory.Delete.CatchDirectoryNotFoundException_NonExistingDirectory.cs" />
    <Compile Include="Directory Class\Directory.Delete\AlphaFS_Directory.Delete_CatchDirectoryNotEmptyException_NonEmptyDirectory.cs" />
    <Compile Include="Directory Class\Directory.Exists\Directory.Exists_UseCases.cs" />
    <Compile Include="Directory Class\Directory.Exists\Directory.Exists_DriveLetter.cs" />
    <Compile Include="Directory Class\Directory.Exists\Directory.Exists_NonExistingDirectoryDoesNotExist.cs" />
    <Compile Include="Directory Class\Directory.Exists\Directory.Exists_ExistingDirectoryExists.cs" />
    <Compile Include="Directory Class\Directory.Exists\Directory.ExistsTest.cs" />
    <Compile Include="Directory Class\Directory.GetDirectories\Directory.GetDirectories_RelativePath.cs" />
    <Compile Include="Directory Class\Directory.GetDirectories\Directory.GetDirectories_AbsolutePath.cs" />
    <Compile Include="Directory Class\Directory.GetFiles\Directory.GetFiles_RelativePath.cs" />
    <Compile Include="Directory Class\Directory.GetFiles\Directory.GetFiles_AbsolutePath.cs" />
    <Compile Include="Directory Class\Directory.GetLogicalDrives.cs" />
    <Compile Include="Directory Class\Directory.GetFiles\Directory.GetFiles_WithSearchPattern.cs" />
    <Compile Include="Directory Class\Directory.GetFileSystemEntries.cs" />
    <Compile Include="Directory Class\Directory.GetDirectories\Directory.GetDirectories_WithSearchPattern.cs" />
    <Compile Include="Directory Class\Directory.EnumerateFiles.cs" />
    <Compile Include="Directory Class\Directory.EnumerateFileSystemEntries.cs" />
    <Compile Include="Directory Class\Directory.EnumerateDirectories.cs" />
    <Compile Include="Directory Class\Directory.Move\AlphaFS_Directory.Move_CatchDeviceNotReadyException_NonExistingSourceLogicalDrive.cs" />
    <Compile Include="Directory Class\Directory.Move\Directory.MoveTest.cs" />
    <Compile Include="Directory Class\Directory.Move\Directory.Move_Overwrite_DestinationDirectoryAlreadyExists.cs" />
    <Compile Include="Directory Class\Directory.Move\Directory.Move_CatchUnauthorizedAccessException_UserExplicitDenyOnDestinationFolder.cs" />
    <Compile Include="Directory Class\Directory.Move\AlphaFS_Directory.Move_CatchAlreadyExistsException_DestinationDirectoryAlreadyExists.cs" />
    <Compile Include="Directory Class\Directory.Move\Directory.Move_Rename_DifferentCasingDirectory.cs" />
    <Compile Include="Directory Class\Directory.Move\Directory.Move_Rename.cs" />
    <Compile Include="Directory Class\Directory.Move\Directory.Move_SameVolume.cs" />
    <Compile Include="Directory Class\Directory.Move\Directory.Move_ToDifferentVolume_EmulateUsingCopyDelete.cs" />
    <Compile Include="Directory Class\Directory.Move\Directory.Move_CatchDirectoryNotFoundException_NonExistingSourceDirectory.cs" />
    <Compile Include="Directory Class\Directory.Move\AlphaFS_Directory.Move_CatchDeviceNotReadyException_NonExistingDestinationLogicalDrive.cs" />
    <Compile Include="AlphaFS Compression\AlphaFS_Directory.Compress_And_Decompress.cs" />
    <Compile Include="AlphaFS Encryption\AlphaFS_Directory.Encrypt_And_Decrypt.cs" />
    <Compile Include="AlphaFS FileSystemEntryInfo Class\AlphaFS_Directory.EnumerateFileSystemEntryInfos_EnumerateFiles_UsingDirectoryEnumerationFilters.cs" />
    <Compile Include="Directory Class\Directory.Delete\AlphaFS_Directory.IsEmpty.cs" />
    <Compile Include="Directory Class\Directory.Delete\AlphaFS_Directory.DeleteEmptySubdirectories.cs" />
    <Compile Include="AlphaFS Timestamps\Directory.SetTimestamps.cs" />
    <Compile Include="AlphaFS Timestamps\Directory.GetTimestamps.cs" />
    <Compile Include="AlphaFS FileSystemEntryInfo Class\AlphaFS_Directory.EnumerateFileSystemEntryInfos.cs" />
    <Compile Include="AlphaFS Junctions, Links\AlphaFS_Directory.CreateSymbolicLink_And_GetLinkTargetInfo.cs" />
    <Compile Include="AlphaFS Junctions, Links\AlphaFS_Directory.CreateJunction.cs" />
    <Compile Include="Directory Class\Directory.CurrentDirectory.cs" />
    <Compile Include="AlphaFS Junctions, Links\AlphaFS_DirectoryInfo.CreateJunction_And_ExistsJunction_And_DeleteJunction.cs" />
    <Compile Include="Directory Class\Directory.Move\Directory.Move_CatchIOException_SameSourceAndDestination.cs" />
    <Compile Include="Directory Class\AlphaFS_Directory.CountFileSystemObjects.cs" />
    <Compile Include="AlphaFS Alternate Data Streams\AlphaFS_Directory.EnumerateAlternateDataStreams.cs" />
    <Compile Include="Directory Class\Directory.Exists\AlphaFS_Directory.Exists_WithLeadingOrTrailingSpace.cs" />
    <Compile Include="AlphaFS Encryption\AlphaFS_Directory.ExportImportEncryptedDirectoryRaw.cs" />
    <Compile Include="Directory Class\Directory.GetAccessControl.cs" />
    <Compile Include="Directory Class\Directory.SetAccessControl.cs" />
    <Compile Include="DirectoryInfo Class\DirectoryInfo.FolderName255Characters.cs" />
    <Compile Include="DirectoryInfo Class\DirectoryInfo.MoveTo.cs" />
    <Compile Include="DirectoryInfo Class\DirectoryInfo.Attributes.cs" />
    <Compile Include="DirectoryInfo Class\DirectoryInfo.Refresh.cs" />
    <Compile Include="DirectoryInfo Class\DirectoryInfoTest.cs" />
    <Compile Include="DriveInfo Class\DriveInfo.GetDrives.cs" />
    <Compile Include="DriveInfo Class\DriveInfo.InitializeInstance.cs" />
    <Compile Include="DriveInfo Class\DriveInfoTest.cs" />
    <Compile Include="AlphaFS Encryption\AlphaFS_File.GetHash.cs" />
    <Compile Include="File Class\File.Copy\File.Copy.cs" />
    <Compile Include="File Class\File.Copy\AlphaFS_File.Copy_CatchDeviceNotReadyException_NonExistingDestinationLogicalDrive.cs" />
    <Compile Include="File Class\File.Copy\File.Copy_CatchUnauthorizedAccessException_DestinationFileIsReadOnly.cs" />
    <Compile Include="File Class\File.Copy\File.Copy_CatchFileNotFoundException_NonExistingSourceFile.cs" />
    <Compile Include="File Class\File.Copy\File.Copy_CatchDirectoryNotFoundException_NonExistingSourceDirectory.cs" />
    <Compile Include="File Class\File.Copy\AlphaFS_File.Copy_CatchDeviceNotReadyException_NonExistingSourceLogicalDrive.cs" />
    <Compile Include="File Class\File.Copy\AlphaFS_File.Copy_CatchAlreadyExistsException_DestinationFileAlreadyExists.cs" />
    <Compile Include="File Class\File.Copy\File.Copy_Overwrite_DestinationFileAlreadyExists.cs" />
    <Compile Include="File Class\File.Delete\File.DeleteTest.cs" />
    <Compile Include="File Class\File.Move\File.Move_CatchDirectoryNotFoundException_NonExistingSourceDirectory.cs" />
    <Compile Include="File Class\File.Move\File.Move_CatchFileNotFoundException_NonExistingSourceFile.cs" />
    <Compile Include="File Class\File.Move\AlphaFS_File.Move_CatchDeviceNotReadyException_NonExistingDestinationLogicalDrive.cs" />
    <Compile Include="File Class\File.Move\AlphaFS_File.Move_CatchDeviceNotReadyException_NonExistingSourceLogicalDrive.cs" />
    <Compile Include="File Class\File.Move\AlphaFS_File.Move_CatchAlreadyExistsException_DestinationFileAlreadyExists.cs" />
    <Compile Include="File Class\File.Move\File.Move.cs" />
    <Compile Include="File Class\File.Move\File.MoveTest.cs" />
    <Compile Include="File Class\File.CreateText.cs" />
    <Compile Include="File Class\File.OpenWrite.cs" />
    <Compile Include="File Class\File.OpenText.cs" />
    <Compile Include="File Class\File.OpenRead.cs" />
    <Compile Include="File Class\File.Replace.cs" />
    <Compile Include="File Class\File.Move\File_Move.cs" />
    <Compile Include="File Class\File.Copy\File.CopyTest.cs" />
    <Compile Include="AlphaFS Timestamps\File.SetTimestamps.cs" />
    <Compile Include="AlphaFS Timestamps\File.GetTimestamps.cs" />
    <Compile Include="File Class\File.Delete\File.Delete.cs" />
    <Compile Include="File Class\AlphaFS_File.IsLocked.cs" />
    <Compile Include="AlphaFS Junctions, Links\AlphaFS_File.CreateSymbolicLink_And_GetLinkTargetInfo.cs" />
    <Compile Include="AlphaFS Junctions, Links\AlphaFS_File.CreateHardlink_And_EnumerateHardlinks.cs" />
    <Compile Include="AlphaFS Compression\AlphaFS_File.Compress_And_Decompress.cs" />
    <Compile Include="AlphaFS Compression\AlphaFS_File.GetCompressedSize.cs" />
    <Compile Include="File Class\AlphaFS_File.GetSize.cs" />
    <Compile Include="AlphaFS Alternate Data Streams\AlphaFS_File.EnumerateAlternateDataStreams.cs" />
    <Compile Include="File Class\File.Create.cs" />
    <Compile Include="File Class\File.Open.cs" />
    <Compile Include="AlphaFS Encryption\AlphaFS_File.ExportImportEncryptedFileRaw.cs" />
    <Compile Include="File Class\File.Exists.cs" />
    <Compile Include="File Class\File.SetAccessControl.cs" />
    <Compile Include="File Class\File.GetAccessControl.cs" />
    <Compile Include="FileInfo Class\FileInfoTest.cs" />
    <Compile Include="FileInfo Class\FileInfo.Attributes.cs" />
    <Compile Include="FileInfo Class\FileInfo.InitializeInstance_ExistingFile.cs" />
    <Compile Include="FileInfo Class\FileInfo.Refresh.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.EnumerateDomainDfsRoot.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.EnumerateDfsRoot.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.EnumerateDfsLinks.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.ConnectTo_And_DisconnectFrom.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.ConnectDrive_And_DisconnectDrive.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.EnumerateDrives.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.GetHostShareFromPath.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.DriveConnection.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.GetUncName.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.EnumerateOpenResources.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.EnumerateOpenConnections.cs" />
    <Compile Include="AlphaFS Host Class\AlphaFS_Host.EnumerateShares.cs" />
    <Compile Include="AlphaFS DfsInfo Class\AlphaFS_DfsInfoTest.cs" />
    <Compile Include="Directory Class\Directory.CreateDirectory\Directory.CreateDirectory_And_Delete.cs" />
    <Compile Include="Directory Class\DirectoryTest.cs" />
    <Compile Include="AlphaFS Junctions, Links\AlphaFS_JunctionsLinksTest.cs" />
    <Compile Include="AlphaFS OperatingSystem Class\AlphaFS_OperatingSystemTest.cs" />
    <Compile Include="Path Class\Path.CheckSupportedPathFormat_CatchArgumentException_PathContainsInvalidCharacters.cs" />
    <Compile Include="Path Class\Path.CheckSupportedPathFormat_CatchArgumentException_PathStartsWithColon.cs" />
    <Compile Include="Path Class\Path.CheckSupportedPathFormat_CatchNotSupportedException_PathContainsColon.cs" />
    <Compile Include="UnitTest Utility\CreateFile.cs" />
    <Compile Include="UnitTest Utility\DirectoryAssert.cs" />
    <Compile Include="UnitTest Utility\Dump.cs" />
    <Compile Include="UnitTest Utility\FileAssert.cs" />
    <Compile Include="UnitTest Utility\FolderDenyPermission.cs" />
    <Compile Include="Path Class\Path.GetFullPath.cs" />
    <Compile Include="Path Class\AlphaFS_Path.LocalToUnc.cs" />
    <Compile Include="Path Class\Path.GetRelativePath.cs" />
    <Compile Include="Path Class\Path.IsPathRooted.cs" />
    <Compile Include="Path Class\Path.GetExtension.cs" />
    <Compile Include="Path Class\Path.GetDirectoryName.cs" />
    <Compile Include="AlphaFS Shell32 Class\AlphaFS_Shell32.GetFileIcon.cs" />
    <Compile Include="AlphaFS Shell32 Class\AlphaFS_Shell32Info.GetVerbCommand.cs" />
    <Compile Include="AlphaFS Shell32 Class\AlphaFS_Shell32Info.InitializeInstance.cs" />
    <Compile Include="AlphaFS Shell32 Class\AlphaFS_Shell32Test.cs" />
    <Compile Include="DirectoryInfo Class\DirectoryInfo.InitializeInstance.cs" />
    <Compile Include="File Class\FileTest.cs" />
    <Compile Include="Path Class\PathTest.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="UnitTest Utility\CreateDirectoriesAndFiles.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.SetVolumeMountPoint.cs" />
    <Compile Include="UnitTest Utility\InputPaths.cs" />
    <Compile Include="UnitTest Utility\IsAdmin.cs" />
    <Compile Include="UnitTest Utility\TestAccessRules.cs" />
    <Compile Include="UnitTest Utility\GetRandomFileNameWithDiacriticCharacters.cs" />
    <Compile Include="UnitTest Utility\StringToByteArray.cs" />
    <Compile Include="UnitTest Utility\PrintUnitTestHeader.cs" />
    <Compile Include="UnitTest Utility\UnitTestConstants.cs" />
    <Compile Include="UnitTest Utility\TemporaryDirectory.cs" />
    <Compile Include="AlphaFS Volume Class\AlphaFS.Volume.GetVolumeInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\AlphaFS.snk">
      <Link>AlphaFS.snk</Link>
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\AlphaFS\AlphaFS.csproj">
      <Project>{F0F9AF1E-D5B5-4D72-804A-5380622FBDEA}</Project>
      <Name>AlphaFS</Name>
      <Private>False</Private>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>